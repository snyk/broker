version: 2.1

orbs:
  prodsec: snyk/prodsec-orb@1.0
  slack: circleci/slack@4.12.5
  snyk: snyk/snyk@1.7.2

defaults: &defaults
  docker:
    - image: cimg/node:20.11
  working_directory: ~/broker
filter-tags-only: &filter-tags-only
  filters:
    tags:
      only: /^v.*/
    branches:
      ignore: /.*/
filter-dev-branch-only: &filter-dev-branch-only
  filters:
    branches:
      only: /dev\/.*/

parameters:
  fail_on_issues:
    type: boolean
    default: true

commands:
  dockerhub-login:
    steps:
      - run:
          name: Log in to a Docker registry
          command: echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
  dockerhub-logout:
    steps:
      - run:
          name: Logout from a Docker registry
          command: docker logout
  get-tagged-broker-version:
    description: "Get tagged version of Broker NPM package"
    steps:
      - run:
          name: Get tagged version of Broker NPM package
          command: |
            echo "Getting tagged version of Broker NPM package..."
            BROKER_VERSION=${CIRCLE_TAG/v/''}
            echo $BROKER_VERSION
            echo "export BROKER_VERSION=$BROKER_VERSION" >> "$BASH_ENV"
  get-latest-nodejs-version:
    description: "Get latest version of specific Node.js cycle"
    parameters:
      cycle:
        type: string
        default: "20"
    steps:
      - run:
          name: Get latest Node.js <<parameters.cycle>> version
          command: |
            echo "Getting latest Node.js <<parameters.cycle>> version..."
            NODE_LATEST_VERSION=$(curl --silent https://endoflife.date/api/nodejs.json | jq -r '.[] | select (.cycle == "<<parameters.cycle>>")' | jq -r .latest)
            echo $NODE_LATEST_VERSION
            echo "export NODE_LATEST_VERSION=$NODE_LATEST_VERSION" >> "$BASH_ENV"
  install-cosign:
    parameters:
      version:
        type: string
        default: "v2.2.0"
    steps:
      - run:
          name: Install cosign
          command: |
            curl -L https://github.com/sigstore/cosign/releases/download/<<parameters.version>>/cosign-linux-amd64 -o cosign
            chmod +x cosign && sudo mv cosign /usr/local/bin/cosign
      - run:
          name: Verify cosign
          command: cosign version
  build-and-save-docker-image:
    description: "Build Docker image and save it to workspace"
    parameters:
      additional_arguments:
        type: string
        default: ""
      dockerfile:
        type: string
        default: ""
      project_name:
        type: string
        default: "broker"
    steps:
      - run:
          name: Build Docker image (<<parameters.project_name>> - <<parameters.dockerfile>>)
          command: |
            echo "Building Broker image $CIRCLE_PROJECT_REPONAME:$CIRCLE_WORKFLOW_ID..."
            docker build \
              <<#parameters.additional_arguments>><<parameters.additional_arguments>><</parameters.additional_arguments>> \
              --no-cache \
              --tag <<parameters.project_name>>:$CIRCLE_WORKFLOW_ID \
              --file <<parameters.dockerfile>> .
      - run:
          name: Archive Docker image
          command: |
            mkdir -p /tmp/workspace/images
            docker save <<parameters.project_name>>:$CIRCLE_WORKFLOW_ID \
              | gzip > "/tmp/workspace/images/<<parameters.project_name>>:$CIRCLE_WORKFLOW_ID.tar.gz"
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - images
  load-docker-image:
    description: "Load a saved Docker image"
    parameters:
      project_name:
        type: string
        default: "broker"
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load archived Docker image
          command: |
            docker load < "/tmp/workspace/images/<<parameters.project_name>>:$CIRCLE_WORKFLOW_ID.tar.gz"
  tag-and-push-docker-image:
    description: "Tag and push Docker image to registry"
    parameters:
      image_name:
        type: string
      image_tag:
        type: string
      project_name:
        type: string
        default: "broker"
    steps:
      - run:
          name: Tag Docker image
          command: |
            export IMAGE_NAME=<<parameters.image_name>>
            export IMAGE_TAG=${CIRCLE_TAG/v/''}-<<parameters.image_tag>>
            export IMAGE_TAG_LATEST=<<parameters.image_tag>>
            [[ "$IMAGE_TAG" =~ .*dev$ ]] && export IMAGE_TAG=<<parameters.image_tag>>
            [[ "$IMAGE_TAG" =~ .*dev$ ]] && export IMAGE_TAG_LATEST=<<parameters.image_tag>>

            echo "Configured Broker image tags:"
            echo "  - IMAGE_TAG:        $IMAGE_TAG"
            echo "  - IMAGE_TAG_LATEST: $IMAGE_TAG_LATEST"

            echo "Tagging Broker image $IMAGE_NAME:$IMAGE_TAG..."
            docker tag <<parameters.project_name>>:$CIRCLE_WORKFLOW_ID $IMAGE_NAME:$IMAGE_TAG
            echo "Tagging Broker image $IMAGE_NAME:$IMAGE_TAG_LATEST..."
            docker tag <<parameters.project_name>>:$CIRCLE_WORKFLOW_ID $IMAGE_NAME:$IMAGE_TAG_LATEST

            echo "export IMAGE_NAME=$IMAGE_NAME" >> "$BASH_ENV"
            echo "export IMAGE_TAG=$IMAGE_TAG" >> "$BASH_ENV"
            echo "export IMAGE_TAG_LATEST=$IMAGE_TAG_LATEST" >> "$BASH_ENV"
      - run:
          name: Push Docker image
          command: |
            echo "Pushing Broker image $IMAGE_NAME:$IMAGE_TAG..."
            docker push $IMAGE_NAME:$IMAGE_TAG
            echo "Pushing Broker image $IMAGE_NAME:$IMAGE_TAG_LATEST..."
            docker push $IMAGE_NAME:$IMAGE_TAG_LATEST
      - run:
          name: Sign Docker image with Cosign
          command: |
            export IMAGE_WITH_DIGEST=$(docker image inspect --format='{{index .RepoDigests 0}}' $IMAGE_NAME:$IMAGE_TAG)
            echo "Using digest $IMAGE_WITH_DIGEST to sign the image..."
            export COSIGN_KEY=$(echo $COSIGN_ENCODED_KEY | base64 -d)
            cosign sign --yes --key env://COSIGN_KEY --annotations tag=$IMAGE_TAG $IMAGE_WITH_DIGEST
            unset COSIGN_KEY
  prepare-dev-package-metadata:
    steps:
      - run:
          name: Prepare package.json and metadata.json for dev images
          command: |
            cd dockerfiles/.scripts && source prepare.sh
  notify-slack-on-failure:
    parameters:
      channel:
        type: string
        default: broker-alerts-cicd
    steps:
      - slack/notify:
          channel: <<parameters.channel>>
          event: fail
          custom: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "CICD pipeline failed :circleci-fail:",
                    "emoji": true
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Project*: ${CIRCLE_PROJECT_REPONAME}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Job*: ${CIRCLE_JOB}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch*: ${CIRCLE_BRANCH}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Author*: ${CIRCLE_USERNAME}"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "emoji": true,
                        "text": "View Job"
                      },
                      "url": "${CIRCLE_BUILD_URL}"
                    }
                  ]
                }
              ]
            }

jobs:
  install-npm-packages:
    <<: *defaults
    environment:
      NODE_ENV: development
    steps:
      - checkout
      - run:
          name: Install NPM packages
          command: npm clean-install
      - persist_to_workspace:
          root: .
          paths:
            - node_modules/
  lint:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/broker
      - run:
          name: Lint
          command: npm run lint
  lint-json-samples:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Lint JSON templates
          command: ./lintVerifier.sh
  test:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/broker
      - run:
          name: Run tests
          command: npm test && npm run test:bin
      - store_test_results:
          path: reports
  build-and-save-docker-image:
    <<: *defaults
    environment:
      BUILDKIT_PROGRESS: plain
      DOCKER_BUILDKIT: 1
    parameters:
      additional_arguments:
        type: string
        default: ""
      dockerfile:
        type: string
      nodejs_cycle:
        type: string
        default: ""
      project_name:
        type: string
        default: "broker"
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - get-tagged-broker-version
      - get-latest-nodejs-version:
          cycle: <<parameters.nodejs_cycle>>
      - build-and-save-docker-image:
          additional_arguments: <<parameters.additional_arguments>> --build-arg BROKER_VERSION=$BROKER_VERSION --build-arg NODE_VERSION=$NODE_LATEST_VERSION
          dockerfile: <<parameters.dockerfile>>
          project_name: <<parameters.project_name>>
  build-and-save-docker-ubi-image:
    <<: *defaults
    environment:
      BUILDKIT_PROGRESS: plain
      DOCKER_BUILDKIT: 1
    parameters:
      additional_arguments:
        type: string
        default: ""
      dockerfile:
        type: string
      project_name:
        type: string
        default: "broker"
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - get-tagged-broker-version
      - get-latest-nodejs-version
      - build-and-save-docker-image:
          additional_arguments: <<parameters.additional_arguments>> --build-arg BROKER_VERSION=$BROKER_VERSION --build-arg NODE_VERSION=$NODE_LATEST_VERSION
          dockerfile: <<parameters.dockerfile>>
          project_name: <<parameters.project_name>>
  scan-docker-image:
    <<: *defaults
    parameters:
      project:
        type: string
      project_name:
        type: string
        default: "broker"
      severity_threshold:
        type: string
        default: "high"
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - load-docker-image:
          project_name: <<parameters.project_name>>
      - snyk/scan:
          additional-arguments: --policy-path=.snyk
          docker-image-name: <<parameters.project_name>>:$CIRCLE_WORKFLOW_ID
          fail-on-issues: <<pipeline.parameters.fail_on_issues>>
          organization: platform-broker
          project: <<parameters.project>>
          severity-threshold: <<parameters.severity_threshold>>
  tag-and-push-docker-image:
    <<: *defaults
    parameters:
      image_name:
        type: string
      image_tag:
        type: string
      project_name:
        type: string
        default: "broker"
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - dockerhub-login
      - load-docker-image:
          project_name: <<parameters.project_name>>
      - install-cosign
      - tag-and-push-docker-image:
          image_name: <<parameters.image_name>>
          image_tag: <<parameters.image_tag>>
          project_name: <<parameters.project_name>>
      - dockerhub-logout
  build-and-push-dev-docker-image:
    <<: *defaults
    environment:
      BUILDKIT_PROGRESS: plain
      DOCKER_BUILDKIT: 1
    parameters:
      additional_arguments:
        type: string
        default: ""
      dockerfile:
        type: string
      image_name:
        type: string
      image_tag:
        type: string
      project_name:
        type: string
        default: "broker"
      severity_threshold:
        type: string
        default: "high"
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - dockerhub-login
      - prepare-dev-package-metadata
      - build-and-save-docker-image:
          additional_arguments: <<parameters.additional_arguments>>
          dockerfile: <<parameters.dockerfile>>
          project_name: <<parameters.project_name>>
      - load-docker-image:
          project_name: <<parameters.project_name>>
      - snyk/scan:
          docker-image-name: <<parameters.project_name>>:$CIRCLE_WORKFLOW_ID
          fail-on-issues: false
          monitor-on-build: false
          organization: platform-broker
          project: <<parameters.project_name>>
          severity-threshold: <<parameters.severity_threshold>>
      - install-cosign
      - tag-and-push-docker-image:
          image_name: <<parameters.image_name>>
          image_tag: <<parameters.image_tag>>
          project_name: <<parameters.project_name>>
      - dockerhub-logout
  release:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/broker
      - run:
          name: Release to GitHub
          command: |
            npm install --save-exact --save-dev semantic-release@22.0.12 @semantic-release/exec@6.0.3 pkg@5.8.1
            npx semantic-release

workflows:
  CICD:
    jobs:
      - prodsec/secrets-scan:
          name: Scan repository for secrets
          context:
            - snyk-bot-slack
          channel: broker-alerts-cicd
          trusted-branch: master

      - install-npm-packages:
          name: Install NPM packages
          requires:
            - Scan repository for secrets

      - lint-json-samples:
          name: Lint JSON samples
          requires:
            - Install NPM packages

      - lint:
          name: Lint
          requires:
            - Install NPM packages

      - test:
          name: Test
          requires:
            - Install NPM packages

      - release:
          name: Release to GitHub and NPM
          context:
            - nodejs-lib-release
            - snyk-bot-slack
          requires:
            - Test
          post-steps:
            - notify-slack-on-failure
          filters:
            branches:
              only:
                - master

  Release Docker UBI images:
    jobs:
      - prodsec/secrets-scan:
          name: Scan repository for secrets
          context:
            - snyk-bot-slack
          channel: broker-alerts-cicd
          trusted-branch: master
          <<: *filter-tags-only

      - build-and-save-docker-ubi-image:
          name: Build base UBI image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Scan repository for secrets
          dockerfile: dockerfiles/base/Dockerfile.ubi
          project_name: broker-rhel-ubi
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - scan-docker-image:
          name: Scan base UBI image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Build base UBI image
          project: snyk/broker-rhel-ubi
          project_name: broker-rhel-ubi
          post-steps:
            - notify-slack-on-failure:
                channel: broker-alerts-vulns
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push base UBI image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Scan base UBI image
          image_name: snyk/broker
          image_tag: base-rhel-ubi
          project_name: broker-rhel-ubi
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build artifactory UBI image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base UBI image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-rhel-ubi --build-arg BROKER_TYPE=artifactory"
          dockerfile: dockerfiles/Dockerfile.ubi
          project_name: rhel-ubi-artifactory
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push artifactory UBI image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build artifactory UBI image
          image_name: snyk/broker
          image_tag: rhel-ubi-artifactory
          project_name: rhel-ubi-artifactory
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build azure-repos UBI image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base UBI image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-rhel-ubi --build-arg BROKER_TYPE=azure-repos"
          dockerfile: dockerfiles/Dockerfile.ubi
          project_name: rhel-ubi-azure-repos
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push azure-repos UBI image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build azure-repos UBI image
          image_name: snyk/broker
          image_tag: rhel-ubi-azure-repos
          project_name: rhel-ubi-azure-repos
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build bitbucket-server UBI image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base UBI image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-rhel-ubi --build-arg BROKER_TYPE=bitbucket-server"
          dockerfile: dockerfiles/Dockerfile.ubi
          project_name: rhel-ubi-bitbucket-server
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push bitbucket-server UBI image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build bitbucket-server UBI image
          image_name: snyk/broker
          image_tag: rhel-ubi-bitbucket-server
          project_name: rhel-ubi-bitbucket-server
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - build-and-save-docker-image:
          name: Build bitbucket-server-bearer-auth UBI image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base UBI image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-rhel-ubi --build-arg BROKER_TYPE=bitbucket-server-bearer-auth"
          dockerfile: dockerfiles/Dockerfile.ubi
          project_name: rhel-ubi-bitbucket-server-bearer-auth
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push bitbucket-server-bearer-auth UBI image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build bitbucket-server-bearer-auth UBI image
          image_name: snyk/broker
          image_tag: rhel-ubi-bitbucket-server-bearer-auth
          project_name: rhel-ubi-bitbucket-server-bearer-auth
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build container-registry-agent UBI image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base UBI image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-rhel-ubi --build-arg BROKER_TYPE=container-registry-agent"
          dockerfile: dockerfiles/container-registry-agent/Dockerfile.ubi
          project_name: rhel-ubi-container-registry-agent
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push bitbucket-server UBI image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build container-registry-agent UBI image
          image_name: snyk/broker
          image_tag: rhel-ubi-container-registry-agent
          project_name: rhel-ubi-container-registry-agent
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build github-com UBI image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base UBI image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-rhel-ubi --build-arg BROKER_TYPE=github-com"
          dockerfile: dockerfiles/Dockerfile.ubi
          project_name: rhel-ubi-github-com
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push github-com UBI image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build github-com UBI image
          image_name: snyk/broker
          image_tag: rhel-ubi-github-com
          project_name: rhel-ubi-github-com
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build github-enterprise UBI image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base UBI image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-rhel-ubi --build-arg BROKER_TYPE=github-enterprise"
          dockerfile: dockerfiles/Dockerfile.ubi
          project_name: rhel-ubi-github-enterprise
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push github-enterprise UBI image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build github-enterprise UBI image
          image_name: snyk/broker
          image_tag: rhel-ubi-github-enterprise
          project_name: rhel-ubi-github-enterprise
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build github-server-app UBI image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base UBI image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-rhel-ubi --build-arg BROKER_TYPE=github-server-app"
          dockerfile: dockerfiles/Dockerfile.ubi
          project_name: rhel-ubi-github-server-app
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push github-server-app UBI image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build github-server-app UBI image
          image_name: snyk/broker
          image_tag: rhel-ubi-github-server-app
          project_name: rhel-ubi-github-server-app
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build gitlab UBI image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base UBI image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-rhel-ubi --build-arg BROKER_TYPE=gitlab"
          dockerfile: dockerfiles/Dockerfile.ubi
          project_name: rhel-ubi-gitlab
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push gitlab UBI image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build gitlab UBI image
          image_name: snyk/broker
          image_tag: rhel-ubi-gitlab
          project_name: rhel-ubi-gitlab
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build jira UBI image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base UBI image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-rhel-ubi --build-arg BROKER_TYPE=jira"
          dockerfile: dockerfiles/Dockerfile.ubi
          project_name: rhel-ubi-jira
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push jira UBI image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build jira UBI image
          image_name: snyk/broker
          image_tag: rhel-ubi-jira
          project_name: rhel-ubi-jira
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build jira bearer auth UBI image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base UBI image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-rhel-ubi --build-arg BROKER_TYPE=jira-bearer-auth"
          dockerfile: dockerfiles/Dockerfile.ubi
          project_name: rhel-ubi-jira-bearer-auth
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push jira bearer auth UBI image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build jira bearer auth UBI image
          image_name: snyk/broker
          image_tag: rhel-ubi-jira-bearer-auth
          project_name: rhel-ubi-jira-bearer-auth
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build nexus UBI image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base UBI image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-rhel-ubi --build-arg BROKER_TYPE=nexus"
          dockerfile: dockerfiles/Dockerfile.ubi
          project_name: rhel-ubi-nexus
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push nexus UBI image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build nexus UBI image
          image_name: snyk/broker
          image_tag: rhel-ubi-nexus
          project_name: rhel-ubi-nexus
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build nexus2 UBI image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base UBI image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-rhel-ubi --build-arg BROKER_TYPE=nexus2"
          dockerfile: dockerfiles/Dockerfile.ubi
          project_name: rhel-ubi-nexus2
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push nexus2 UBI image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build nexus2 UBI image
          image_name: snyk/broker
          image_tag: rhel-ubi-nexus2
          project_name: rhel-ubi-nexus2
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build universal UBI image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base UBI image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-rhel-ubi"
          dockerfile: dockerfiles/Dockerfile-universal.ubi
          project_name: rhel-ubi-universal
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push universal UBI image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build universal UBI image
          image_name: snyk/broker
          image_tag: rhel-ubi-universal
          project_name: rhel-ubi-universal
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

  Release Docker images:
    jobs:
      - prodsec/secrets-scan:
          name: Scan repository for secrets
          context:
            - snyk-bot-slack
          channel: broker-alerts-cicd
          trusted-branch: master
          filters:
            tags:
              only: /^v.*/
            branches:
              only: /dev\/.*/

      - build-and-save-docker-image:
          name: Build base image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Scan repository for secrets
          dockerfile: dockerfiles/base/Dockerfile
          nodejs_cycle: "20"
          project_name: broker
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - scan-docker-image:
          name: Scan base image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Build base image
          project: snyk/broker
          project_name: broker
          post-steps:
            - notify-slack-on-failure:
                channel: broker-alerts-vulns
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push base image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Scan base image
          image_name: snyk/broker
          image_tag: base
          project_name: broker
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build base image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Scan repository for secrets
          dockerfile: dockerfiles/base/Dockerfile
          nodejs_cycle: "21"
          project_name: broker-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - scan-docker-image:
          name: Scan base image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Build base image (nlatest)
          project: snyk/broker
          project_name: broker-nlatest
          post-steps:
            - notify-slack-on-failure:
                channel: broker-alerts-vulns
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push base image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Scan base image (nlatest)
          image_name: snyk/broker
          image_tag: base-nlatest
          project_name: broker-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build artifactory image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base --build-arg BROKER_TYPE=artifactory"
          dockerfile: dockerfiles/Dockerfile
          project_name: artifactory
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push artifactory image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build artifactory image
          image_name: snyk/broker
          image_tag: artifactory
          project_name: artifactory
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build azure-repos image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base --build-arg BROKER_TYPE=azure-repos"
          dockerfile: dockerfiles/Dockerfile
          project_name: azure-repos
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push azure-repos image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build azure-repos image
          image_name: snyk/broker
          image_tag: azure-repos
          project_name: azure-repos
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build bitbucket-server image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base --build-arg BROKER_TYPE=bitbucket-server"
          dockerfile: dockerfiles/Dockerfile
          project_name: bitbucket-server
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push bitbucket-server image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build bitbucket-server image
          image_name: snyk/broker
          image_tag: bitbucket-server
          project_name: bitbucket-server
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build bitbucket-server-bearer-auth image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base --build-arg BROKER_TYPE=bitbucket-server-bearer-auth"
          dockerfile: dockerfiles/Dockerfile
          project_name: bitbucket-server-bearer-auth
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push bitbucket-server-bearer-auth image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build bitbucket-server-bearer-auth image
          image_name: snyk/broker
          image_tag: bitbucket-server-bearer-auth
          project_name: bitbucket-server-bearer-auth
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build container-registry-agent image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base --build-arg BROKER_TYPE=container-registry-agent"
          dockerfile: dockerfiles/container-registry-agent/Dockerfile
          project_name: container-registry-agent
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push container-registry-agent image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build container-registry-agent image
          image_name: snyk/broker
          image_tag: container-registry-agent
          project_name: container-registry-agent
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build github-com image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base --build-arg BROKER_TYPE=github-com"
          dockerfile: dockerfiles/Dockerfile
          project_name: github-com
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push github-com image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build github-com image
          image_name: snyk/broker
          image_tag: github-com
          project_name: github-com
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build github-enterprise image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base --build-arg BROKER_TYPE=github-enterprise"
          dockerfile: dockerfiles/Dockerfile
          project_name: github-enterprise
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push github-enterprise image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build github-enterprise image
          image_name: snyk/broker
          image_tag: github-enterprise
          project_name: github-enterprise
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build github-server-app image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base --build-arg BROKER_TYPE=github-server-app"
          dockerfile: dockerfiles/Dockerfile
          project_name: github-server-app
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push github-server-app image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build github-server-app image
          image_name: snyk/broker
          image_tag: github-server-app
          project_name: github-server-app
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build gitlab image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base --build-arg BROKER_TYPE=gitlab"
          dockerfile: dockerfiles/Dockerfile
          project_name: gitlab
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push gitlab image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build gitlab image
          image_name: snyk/broker
          image_tag: gitlab
          project_name: gitlab
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build jira image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base --build-arg BROKER_TYPE=jira"
          dockerfile: dockerfiles/Dockerfile
          project_name: jira
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push jira image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build jira image
          image_name: snyk/broker
          image_tag: jira
          project_name: jira
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build jira bearer auth image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base --build-arg BROKER_TYPE=jira-bearer-auth"
          dockerfile: dockerfiles/Dockerfile
          project_name: jira-bearer-auth
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push jira bearer auth image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build jira bearer auth image
          image_name: snyk/broker
          image_tag: jira-bearer-auth
          project_name: jira-bearer-auth
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build nexus image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base --build-arg BROKER_TYPE=nexus"
          dockerfile: dockerfiles/Dockerfile
          project_name: nexus
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push nexus image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build nexus image
          image_name: snyk/broker
          image_tag: nexus
          project_name: nexus
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build nexus2 image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base --build-arg BROKER_TYPE=nexus2"
          dockerfile: dockerfiles/Dockerfile
          project_name: nexus2
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push nexus2 image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build nexus2 image
          image_name: snyk/broker
          image_tag: nexus2
          project_name: nexus2
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build universal image
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base"
          dockerfile: dockerfiles/Dockerfile-universal
          project_name: universal
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push universal image
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build universal image
          image_name: snyk/broker
          image_tag: universal
          project_name: universal
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build artifactory image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image (nlatest)
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-nlatest --build-arg BROKER_TYPE=artifactory"
          dockerfile: dockerfiles/Dockerfile
          project_name: artifactory-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push artifactory image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build artifactory image (nlatest)
          image_name: snyk/broker
          image_tag: artifactory-nlatest
          project_name: artifactory-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build azure-repos image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image (nlatest)
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-nlatest --build-arg BROKER_TYPE=azure-repos"
          dockerfile: dockerfiles/Dockerfile
          project_name: azure-repos-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push azure-repos image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build azure-repos image (nlatest)
          image_name: snyk/broker
          image_tag: azure-repos-nlatest
          project_name: azure-repos-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build bitbucket-server image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image (nlatest)
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-nlatest --build-arg BROKER_TYPE=bitbucket-server"
          dockerfile: dockerfiles/Dockerfile
          project_name: bitbucket-server-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push bitbucket-server image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build bitbucket-server image (nlatest)
          image_name: snyk/broker
          image_tag: bitbucket-server-nlatest
          project_name: bitbucket-server-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build bitbucket-server-bearer-auth image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image (nlatest)
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-nlatest --build-arg BROKER_TYPE=bitbucket-server-bearer-auth"
          dockerfile: dockerfiles/Dockerfile
          project_name: bitbucket-server-bearer-auth-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push bitbucket-server-bearer-auth image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build bitbucket-server-bearer-auth image (nlatest)
          image_name: snyk/broker
          image_tag: bitbucket-server-bearer-auth-nlatest
          project_name: bitbucket-server-bearer-auth-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build container-registry-agent image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image (nlatest)
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-nlatest --build-arg BROKER_TYPE=container-registry-agent"
          dockerfile: dockerfiles/container-registry-agent/Dockerfile
          project_name: container-registry-agent-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push container-registry-agent image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build container-registry-agent image (nlatest)
          image_name: snyk/broker
          image_tag: container-registry-agent-nlatest
          project_name: container-registry-agent-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build github-com image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image (nlatest)
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-nlatest --build-arg BROKER_TYPE=github-com"
          dockerfile: dockerfiles/Dockerfile
          project_name: github-com-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push github-com image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build github-com image (nlatest)
          image_name: snyk/broker
          image_tag: github-com-nlatest
          project_name: github-com-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build github-enterprise image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image (nlatest)
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-nlatest --build-arg BROKER_TYPE=github-enterprise"
          dockerfile: dockerfiles/Dockerfile
          project_name: github-enterprise-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push github-enterprise image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build github-enterprise image (nlatest)
          image_name: snyk/broker
          image_tag: github-enterprise-nlatest
          project_name: github-enterprise-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build github-server-app image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image (nlatest)
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-nlatest --build-arg BROKER_TYPE=github-server-app"
          dockerfile: dockerfiles/Dockerfile
          project_name: github-server-app-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push github-server-app image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build github-server-app image (nlatest)
          image_name: snyk/broker
          image_tag: github-server-app-nlatest
          project_name: github-server-app-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build gitlab image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image (nlatest)
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-nlatest --build-arg BROKER_TYPE=gitlab"
          dockerfile: dockerfiles/Dockerfile
          project_name: gitlab-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push gitlab image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build gitlab image (nlatest)
          image_name: snyk/broker
          image_tag: gitlab-nlatest
          project_name: gitlab-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build jira image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image (nlatest)
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-nlatest --build-arg BROKER_TYPE=jira"
          dockerfile: dockerfiles/Dockerfile
          project_name: jira-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push jira image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build jira image (nlatest)
          image_name: snyk/broker
          image_tag: jira-nlatest
          project_name: jira-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build jira bearer auth image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image (nlatest)
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-nlatest --build-arg BROKER_TYPE=jira-bearer-auth"
          dockerfile: dockerfiles/Dockerfile
          project_name: jira-bearer-auth-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push jira bearer auth image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build jira bearer auth image (nlatest)
          image_name: snyk/broker
          image_tag: jira-bearer-auth-nlatest
          project_name: jira-bearer-auth-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build nexus image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image (nlatest)
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-nlatest --build-arg BROKER_TYPE=nexus"
          dockerfile: dockerfiles/Dockerfile
          project_name: nexus-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push nexus image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build nexus image (nlatest)
          image_name: snyk/broker
          image_tag: nexus-nlatest
          project_name: nexus-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build nexus2 image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image (nlatest)
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-nlatest --build-arg BROKER_TYPE=nexus2"
          dockerfile: dockerfiles/Dockerfile
          project_name: nexus2-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push nexus2 image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build nexus2 image (nlatest)
          image_name: snyk/broker
          image_tag: nexus2-nlatest
          project_name: nexus2-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build universal image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-snyk
          requires:
            - Push base image (nlatest)
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:${CIRCLE_TAG/v/''}-base-nlatest"
          dockerfile: dockerfiles/Dockerfile-universal
          project_name: universal-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push universal image (nlatest)
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build universal image (nlatest)
          image_name: snyk/broker
          image_tag: universal-nlatest
          project_name: universal-nlatest
          post-steps:
            - notify-slack-on-failure
          <<: *filter-tags-only

      - approve-build-github-com-dev:
          name: github-com-dev image
          type: approval
          requires:
            - Scan repository for secrets
          <<: *filter-dev-branch-only
      - build-and-push-dev-docker-image:
          name: Build and push github-com image (dev)
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - github-com-dev image
          additional_arguments: "--build-arg BROKER_TYPE=github-com"
          dockerfile: dockerfiles/Dockerfile.dev
          image_name: snyk/broker
          image_tag: github-com-dev
          project_name: github-com-dev
          post-steps:
            - notify-slack-on-failure
          <<: *filter-dev-branch-only

      - approve-build-github-com-nlatest-dev:
          name: github-com-nlatest-dev image
          type: approval
          requires:
            - Scan repository for secrets
          <<: *filter-dev-branch-only
      - build-and-push-dev-docker-image:
          name: Build and push github-com-nlatest image (dev)
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - github-com-nlatest-dev image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:base-nlatest --build-arg BROKER_TYPE=github-com"
          dockerfile: dockerfiles/Dockerfile.dev
          image_name: snyk/broker
          image_tag: github-com-nlatest-dev
          project_name: github-com-nlatest-dev
          post-steps:
            - notify-slack-on-failure
          <<: *filter-dev-branch-only

      - approve-build-gitlab-dev:
          name: gitlab-dev image
          type: approval
          requires:
            - Scan repository for secrets
          <<: *filter-dev-branch-only
      - build-and-push-dev-docker-image:
          name: Build and push gitlab image (dev)
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - gitlab-dev image
          additional_arguments: "--build-arg BROKER_TYPE=gitlab"
          dockerfile: dockerfiles/Dockerfile.dev
          image_name: snyk/broker
          image_tag: gitlab-dev
          project_name: gitlab-dev
          post-steps:
            - notify-slack-on-failure
          <<: *filter-dev-branch-only

      - approve-build-bitbucket-server-dev:
          name: bitbucket-server-dev image
          type: approval
          requires:
            - Scan repository for secrets
          <<: *filter-dev-branch-only
      - build-and-push-dev-docker-image:
          name: Build and push bitbucket-server image (dev)
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - bitbucket-server-dev image
          additional_arguments: "--build-arg BROKER_TYPE=bitbucket-server"
          dockerfile: dockerfiles/Dockerfile.dev
          image_name: snyk/broker
          image_tag: bitbucket-server-dev
          project_name: bitbucket-server-dev
          post-steps:
            - notify-slack-on-failure
          <<: *filter-dev-branch-only

      - approve-build-gitlab-nlatest-dev:
          name: gitlab-nlatest-dev image
          type: approval
          requires:
            - Scan repository for secrets
          <<: *filter-dev-branch-only
      - build-and-push-dev-docker-image:
          name: Build and push gitlab-nlatest image (dev)
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - gitlab-nlatest-dev image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:base-nlatest --build-arg BROKER_TYPE=gitlab"
          dockerfile: dockerfiles/Dockerfile.dev
          image_name: snyk/broker
          image_tag: gitlab-nlatest-dev
          project_name: gitlab-nlatest-dev
          post-steps:
            - notify-slack-on-failure
          <<: *filter-dev-branch-only

      - approve-build-nexus-dev:
          name: nexus-dev image
          type: approval
          requires:
            - Scan repository for secrets
          <<: *filter-dev-branch-only
      - build-and-push-dev-docker-image:
          name: Build and push nexus image (dev)
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - nexus-dev image
          additional_arguments: "--build-arg BROKER_TYPE=nexus"
          dockerfile: dockerfiles/Dockerfile.dev
          image_name: snyk/broker
          image_tag: nexus-dev
          project_name: nexus-dev
          post-steps:
            - notify-slack-on-failure
          <<: *filter-dev-branch-only

      - approve-build-nexus-nlatest-dev:
          name: nexus-nlatest-dev image
          type: approval
          requires:
            - Scan repository for secrets
          <<: *filter-dev-branch-only
      - build-and-push-dev-docker-image:
          name: Build and push nexus-nlatest image (dev)
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - nexus-nlatest-dev image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:base-nlatest --build-arg BROKER_TYPE=nexus"
          dockerfile: dockerfiles/Dockerfile.dev
          image_name: snyk/broker
          image_tag: nexus-nlatest-dev
          project_name: nexus-nlatest-dev
          post-steps:
            - notify-slack-on-failure
          <<: *filter-dev-branch-only

      - approve-build-universal-dev:
          name: universal-dev image
          type: approval
          requires:
            - Scan repository for secrets
          <<: *filter-dev-branch-only
      - build-and-push-dev-docker-image:
          name: Build and push universal image (dev)
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - universal-dev image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:base"
          dockerfile: dockerfiles/Dockerfile-universal.dev
          image_name: snyk/broker
          image_tag: universal-dev
          project_name: universal-dev
          post-steps:
            - notify-slack-on-failure
          <<: *filter-dev-branch-only
      - build-and-push-dev-docker-image:
          name: Build and push universal-nlatest image (dev)
          context:
            - snyk-bot-slack
            - team-broker-cosign
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - universal-dev image
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:base-nlatest"
          dockerfile: dockerfiles/Dockerfile-universal.dev
          image_name: snyk/broker
          image_tag: universal-nlatest-dev
          project_name: universal-nlatest-dev
          post-steps:
            - notify-slack-on-failure
          <<: *filter-dev-branch-only
